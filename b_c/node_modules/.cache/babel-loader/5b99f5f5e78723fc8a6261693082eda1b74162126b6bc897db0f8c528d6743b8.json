{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\n\n//회원가입\nexport const useFormErrors_ChangePW = initialState => {\n  _s();\n  const [errors, setErrors] = useState(initialState);\n  const validatePassword = password => {\n    // 비밀번호는 최소 8자 이상, 하나 이상의 숫자와 하나의 특수문자를 포함해야 한다고 가정\n    const passwordRegex = /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[!@#$%^&*])[A-Za-z\\d!@#$%^&*]{8,}$/;\n    return passwordRegex.test(password);\n  };\n  const updateErrors = (name, value, formData) => {\n    setErrors(prevErrors => {\n      const newErrors = {\n        ...prevErrors\n      };\n      if (name === \"PW\") newErrors.PW = !value || !validatePassword(value);\n      if (name === \"confirmPW\") newErrors.confirmPW = !value || value !== formData.PW;\n      return newErrors;\n    });\n  };\n  const checkErrors = formData => {\n    const newErrors = {\n      PW: !formData.PW || !validatePassword(formData.PW),\n      confirmPW: !formData.confirmPW || formData.PW !== formData.confirmPW\n    };\n    setErrors(newErrors);\n    return Object.values(newErrors).some(error => error);\n  };\n  return {\n    errors,\n    updateErrors,\n    checkErrors\n  };\n};\n_s(useFormErrors_ChangePW, \"wWorJWFubF577LtPW7wDbLKDpY4=\");","map":{"version":3,"names":["useState","useFormErrors_ChangePW","initialState","_s","errors","setErrors","validatePassword","password","passwordRegex","test","updateErrors","name","value","formData","prevErrors","newErrors","PW","confirmPW","checkErrors","Object","values","some","error"],"sources":["C:/Users/gkscj/Desktop/web 프로젝트/B_C/b_c/src/Function/ChangePW/useFormErrors_ChangePW.js"],"sourcesContent":["import { useState } from \"react\";\r\n\r\n//회원가입\r\nexport const useFormErrors_ChangePW = (initialState) => {\r\n  const [errors, setErrors] = useState(initialState);\r\n\r\n  const validatePassword = (password) => {\r\n    // 비밀번호는 최소 8자 이상, 하나 이상의 숫자와 하나의 특수문자를 포함해야 한다고 가정\r\n    const passwordRegex =\r\n      /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[!@#$%^&*])[A-Za-z\\d!@#$%^&*]{8,}$/;\r\n    return passwordRegex.test(password);\r\n  };\r\n\r\n  const updateErrors = (name, value, formData) => {\r\n    setErrors((prevErrors) => {\r\n      const newErrors = { ...prevErrors };\r\n      if (name === \"PW\") newErrors.PW = !value || !validatePassword(value);\r\n      if (name === \"confirmPW\")\r\n        newErrors.confirmPW = !value || value !== formData.PW;\r\n      return newErrors;\r\n    });\r\n  };\r\n\r\n  const checkErrors = (formData) => {\r\n    const newErrors = {\r\n      PW: !formData.PW || !validatePassword(formData.PW),\r\n      confirmPW: !formData.confirmPW || formData.PW !== formData.confirmPW,\r\n    };\r\n    setErrors(newErrors);\r\n    return Object.values(newErrors).some((error) => error);\r\n  };\r\n\r\n  return { errors, updateErrors, checkErrors };\r\n};\r\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;;AAEhC;AACA,OAAO,MAAMC,sBAAsB,GAAIC,YAAY,IAAK;EAAAC,EAAA;EACtD,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGL,QAAQ,CAACE,YAAY,CAAC;EAElD,MAAMI,gBAAgB,GAAIC,QAAQ,IAAK;IACrC;IACA,MAAMC,aAAa,GACjB,gEAAgE;IAClE,OAAOA,aAAa,CAACC,IAAI,CAACF,QAAQ,CAAC;EACrC,CAAC;EAED,MAAMG,YAAY,GAAGA,CAACC,IAAI,EAAEC,KAAK,EAAEC,QAAQ,KAAK;IAC9CR,SAAS,CAAES,UAAU,IAAK;MACxB,MAAMC,SAAS,GAAG;QAAE,GAAGD;MAAW,CAAC;MACnC,IAAIH,IAAI,KAAK,IAAI,EAAEI,SAAS,CAACC,EAAE,GAAG,CAACJ,KAAK,IAAI,CAACN,gBAAgB,CAACM,KAAK,CAAC;MACpE,IAAID,IAAI,KAAK,WAAW,EACtBI,SAAS,CAACE,SAAS,GAAG,CAACL,KAAK,IAAIA,KAAK,KAAKC,QAAQ,CAACG,EAAE;MACvD,OAAOD,SAAS;IAClB,CAAC,CAAC;EACJ,CAAC;EAED,MAAMG,WAAW,GAAIL,QAAQ,IAAK;IAChC,MAAME,SAAS,GAAG;MAChBC,EAAE,EAAE,CAACH,QAAQ,CAACG,EAAE,IAAI,CAACV,gBAAgB,CAACO,QAAQ,CAACG,EAAE,CAAC;MAClDC,SAAS,EAAE,CAACJ,QAAQ,CAACI,SAAS,IAAIJ,QAAQ,CAACG,EAAE,KAAKH,QAAQ,CAACI;IAC7D,CAAC;IACDZ,SAAS,CAACU,SAAS,CAAC;IACpB,OAAOI,MAAM,CAACC,MAAM,CAACL,SAAS,CAAC,CAACM,IAAI,CAAEC,KAAK,IAAKA,KAAK,CAAC;EACxD,CAAC;EAED,OAAO;IAAElB,MAAM;IAAEM,YAAY;IAAEQ;EAAY,CAAC;AAC9C,CAAC;AAACf,EAAA,CA9BWF,sBAAsB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}