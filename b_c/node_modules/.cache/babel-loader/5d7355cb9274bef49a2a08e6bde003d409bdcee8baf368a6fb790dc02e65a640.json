{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gkscj\\\\Desktop\\\\web \\uD504\\uB85C\\uC81D\\uD2B8\\\\B_C\\\\b_c\\\\src\\\\Component\\\\Menubar.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport \"../Style/Menubar.css\";\nimport MenubarLoginbefore from \"../Function/Menubar/MenubarLoginbefore\";\nimport MenubarLoginafter from \"../Function/Menubar/MenubarLoginafter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Menubar() {\n  _s();\n  //nickname 받기\n  const navigate = useNavigate();\n  const location = useLocation();\n  const HandleClick = url => {\n    if (location.pathname === url) {\n      // 새로고침 기능\n      window.location.reload();\n    } else {\n      navigate(url);\n    }\n  };\n\n  //로그인전 메뉴바 확인\n  const start_page = [\"/Login\"];\n\n  // 로그인된 메뉴바 확인\n  const HomePageLoginPages = [\"/HomePageLogin\"]; // 로그인된 화면\n  const Blog = [\"/Blog\"]; // 블로그\n  const Community = [\"/Community\"]; // 커뮤니티\n  const ChangeUserInfo = [\"/ChangeUserInfo\"];\n  const CreateBlog = [\"/CreateBlog\"];\n  function page_check() {\n    if (start_page.includes(location.pathname)) {\n      return 1;\n    }\n    if (HomePageLoginPages.includes(location.pathname) || Blog.includes(location.pathname) || Community.includes(location.pathname) || ChangeUserInfo.includes(location.pathname) || CreateBlog.includes(location.pathname)) {\n      return 2;\n    }\n    return 0; // 기본값\n  }\n  if (page_check() === 1) {\n    return /*#__PURE__*/_jsxDEV(MenubarLoginbefore, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 12\n    }, this);\n  } else if (page_check() === 2) {\n    return /*#__PURE__*/_jsxDEV(MenubarLoginafter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        onClick: () => HandleClick(\"/\"),\n        style: {\n          cursor: \"pointer\"\n        },\n        children: \"ABCD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => HandleClick(\"/TestModule\"),\n        children: \"\\uBAA8\\uB4C8 \\uD14C\\uC2A4\\uD2B8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => HandleClick(\"/Login\"),\n        className: \"login-button-Home\",\n        children: \"\\uB85C\\uADF8\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this);\n  }\n}\n_s(Menubar, \"VDZHUspDq9N5O9RWjniBrjgIdAA=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = Menubar;\nexport default Menubar;\nvar _c;\n$RefreshReg$(_c, \"Menubar\");","map":{"version":3,"names":["React","useNavigate","useLocation","MenubarLoginbefore","MenubarLoginafter","jsxDEV","_jsxDEV","Menubar","_s","navigate","location","HandleClick","url","pathname","window","reload","start_page","HomePageLoginPages","Blog","Community","ChangeUserInfo","CreateBlog","page_check","includes","fileName","_jsxFileName","lineNumber","columnNumber","className","children","onClick","style","cursor","_c","$RefreshReg$"],"sources":["C:/Users/gkscj/Desktop/web 프로젝트/B_C/b_c/src/Component/Menubar.js"],"sourcesContent":["import React from \"react\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport \"../Style/Menubar.css\";\r\nimport MenubarLoginbefore from \"../Function/Menubar/MenubarLoginbefore\";\r\nimport MenubarLoginafter from \"../Function/Menubar/MenubarLoginafter\";\r\n\r\nfunction Menubar() {\r\n  //nickname 받기\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  const HandleClick = (url) => {\r\n    if (location.pathname === url) {\r\n      // 새로고침 기능\r\n      window.location.reload();\r\n    } else {\r\n      navigate(url);\r\n    }\r\n  };\r\n\r\n  //로그인전 메뉴바 확인\r\n  const start_page = [\"/Login\"];\r\n\r\n  // 로그인된 메뉴바 확인\r\n  const HomePageLoginPages = [\"/HomePageLogin\"]; // 로그인된 화면\r\n  const Blog = [\"/Blog\"]; // 블로그\r\n  const Community = [\"/Community\"]; // 커뮤니티\r\n  const ChangeUserInfo = [\"/ChangeUserInfo\"];\r\n  const CreateBlog = [\"/CreateBlog\"];\r\n\r\n  function page_check() {\r\n    if (start_page.includes(location.pathname)) {\r\n      return 1;\r\n    }\r\n    if (\r\n      HomePageLoginPages.includes(location.pathname) ||\r\n      Blog.includes(location.pathname) ||\r\n      Community.includes(location.pathname) ||\r\n      ChangeUserInfo.includes(location.pathname) ||\r\n      CreateBlog.includes(location.pathname)\r\n    ) {\r\n      return 2;\r\n    }\r\n    return 0; // 기본값\r\n  }\r\n\r\n  if (page_check() === 1) {\r\n    return <MenubarLoginbefore></MenubarLoginbefore>;\r\n  } else if (page_check() === 2) {\r\n    return <MenubarLoginafter></MenubarLoginafter>;\r\n  } else {\r\n    return (\r\n      <header className=\"App-header\">\r\n        <h1 onClick={() => HandleClick(\"/\")} style={{ cursor: \"pointer\" }}>\r\n          ABCD\r\n        </h1>\r\n        <button onClick={() => HandleClick(\"/TestModule\")}>모듈 테스트</button>\r\n        <button\r\n          onClick={() => HandleClick(\"/Login\")}\r\n          className=\"login-button-Home\"\r\n        >\r\n          로그인\r\n        </button>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Menubar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}