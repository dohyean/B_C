{"ast":null,"code":"// sign_up_function.js\nimport { checkFormData } from \"./CheckUserInput.js\";\nexport const Sign_Up = (formData, setFormData, navigate) => {\n  var passwordRegex = /^(?=.*[a-zA-Z])(?=.*[0-9])(?=.*[!@#$%^&*?_]).{8,32}$/;\n  const phoneRegex = /^\\d{3}-\\d{4}-\\d{4}$/;\n\n  // const keysToCheck = [\n  //   \"ID\",\n  //   \"PW\",\n  //   \"confirmPW\",\n  //   \"nickname\",\n  //   \"name\",\n  //   \"Phone\",\n  //   \"Birth\",\n  // ];\n  // if (!checkFormData(formData, keysToCheck)) {\n  //   return;\n  // }\n\n  // if (!phoneRegex.test(formData.Phone)) {\n  //   alert(\"전화번호는 010-1234-5678 같이 입력해야 합니다.\");\n  //   return;\n  // }\n\n  // if (!passwordRegex.test(formData.PW)) {\n  //   alert(\n  //     \"비밀번호는 8~32자 이내의 영문자, 숫자 및 특수 문자를 포함해야 합니다.\"\n  //   );\n  //   return;\n  // }\n\n  // if (formData.PW !== formData.confirmPW) {\n  //   alert(\"비밀번호가 일치하지 않습니다.\");\n  //   return;\n  // }\n\n  alert(JSON.stringify(formData));\n\n  // 회원 가입 성공 시 초기화\n  setFormData({\n    ID: \"\",\n    PW: \"\",\n    confirmPW: \"\",\n    nickname: \"\",\n    name: \"\",\n    Phone: \"\",\n    Birth: \"\"\n  });\n  alert(\"회원가입 완료\");\n  navigate(\"/Login\");\n};\n_c = Sign_Up;\nvar _c;\n$RefreshReg$(_c, \"Sign_Up\");","map":{"version":3,"names":["checkFormData","Sign_Up","formData","setFormData","navigate","passwordRegex","phoneRegex","alert","JSON","stringify","ID","PW","confirmPW","nickname","name","Phone","Birth","_c","$RefreshReg$"],"sources":["C:/Users/junsung/OneDrive/문서/GitHub/B_C/b_c/src/Function/SignUp_Sign_up.js"],"sourcesContent":["// sign_up_function.js\r\nimport { checkFormData } from \"./CheckUserInput.js\";\r\n\r\nexport const Sign_Up = (formData, setFormData, navigate) => {\r\n  var passwordRegex = /^(?=.*[a-zA-Z])(?=.*[0-9])(?=.*[!@#$%^&*?_]).{8,32}$/;\r\n  const phoneRegex = /^\\d{3}-\\d{4}-\\d{4}$/;\r\n\r\n  // const keysToCheck = [\r\n  //   \"ID\",\r\n  //   \"PW\",\r\n  //   \"confirmPW\",\r\n  //   \"nickname\",\r\n  //   \"name\",\r\n  //   \"Phone\",\r\n  //   \"Birth\",\r\n  // ];\r\n  // if (!checkFormData(formData, keysToCheck)) {\r\n  //   return;\r\n  // }\r\n\r\n  // if (!phoneRegex.test(formData.Phone)) {\r\n  //   alert(\"전화번호는 010-1234-5678 같이 입력해야 합니다.\");\r\n  //   return;\r\n  // }\r\n\r\n  // if (!passwordRegex.test(formData.PW)) {\r\n  //   alert(\r\n  //     \"비밀번호는 8~32자 이내의 영문자, 숫자 및 특수 문자를 포함해야 합니다.\"\r\n  //   );\r\n  //   return;\r\n  // }\r\n\r\n  // if (formData.PW !== formData.confirmPW) {\r\n  //   alert(\"비밀번호가 일치하지 않습니다.\");\r\n  //   return;\r\n  // }\r\n\r\n  alert(JSON.stringify(formData));\r\n\r\n  // 회원 가입 성공 시 초기화\r\n  setFormData({\r\n    ID: \"\",\r\n    PW: \"\",\r\n    confirmPW: \"\",\r\n    nickname: \"\",\r\n    name: \"\",\r\n    Phone: \"\",\r\n    Birth: \"\",\r\n  });\r\n\r\n  alert(\"회원가입 완료\");\r\n\r\n  navigate(\"/Login\");\r\n};\r\n"],"mappings":"AAAA;AACA,SAASA,aAAa,QAAQ,qBAAqB;AAEnD,OAAO,MAAMC,OAAO,GAAGA,CAACC,QAAQ,EAAEC,WAAW,EAAEC,QAAQ,KAAK;EAC1D,IAAIC,aAAa,GAAG,sDAAsD;EAC1E,MAAMC,UAAU,GAAG,qBAAqB;;EAExC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEAC,KAAK,CAACC,IAAI,CAACC,SAAS,CAACP,QAAQ,CAAC,CAAC;;EAE/B;EACAC,WAAW,CAAC;IACVO,EAAE,EAAE,EAAE;IACNC,EAAE,EAAE,EAAE;IACNC,SAAS,EAAE,EAAE;IACbC,QAAQ,EAAE,EAAE;IACZC,IAAI,EAAE,EAAE;IACRC,KAAK,EAAE,EAAE;IACTC,KAAK,EAAE;EACT,CAAC,CAAC;EAEFT,KAAK,CAAC,SAAS,CAAC;EAEhBH,QAAQ,CAAC,QAAQ,CAAC;AACpB,CAAC;AAACa,EAAA,GAlDWhB,OAAO;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}