{"ast":null,"code":"// 서버 데이터 전송\nfunction Send_FindID(socket, data) {\n  return new Promise((resolve, reject) => {\n    socket.emit(\"Send FindID\", {\n      PhoneNum: data.Phone\n    });\n    resolve(0);\n  });\n}\n\n// 서버 메시지 수신\n_c = Send_FindID;\nexports.Rec_FindID = async function (socket, data) {\n  await Send_FindID(socket, data);\n  return new Promise((resolve, reject) => {\n    socket.on(\"Receive FindID\", message => {\n      resolve(message);\n    });\n  });\n};\nvar _c;\n$RefreshReg$(_c, \"Send_FindID\");","map":{"version":3,"names":["Send_FindID","socket","data","Promise","resolve","reject","emit","PhoneNum","Phone","_c","exports","Rec_FindID","on","message","$RefreshReg$"],"sources":["C:/Users/USER/Desktop/web 프로그래밍/B_C/b_c/src/Component/moudle/FindID/FindID_Server.js"],"sourcesContent":["// 서버 데이터 전송\r\nfunction Send_FindID(socket, data) {\r\n  return new Promise((resolve, reject) => {\r\n    socket.emit(\"Send FindID\", {\r\n      PhoneNum: data.Phone,\r\n    });\r\n    resolve(0);\r\n  });\r\n}\r\n\r\n// 서버 메시지 수신\r\nexports.Rec_FindID = async function (socket, data) {\r\n  await Send_FindID(socket, data);\r\n  return new Promise((resolve, reject) => {\r\n    socket.on(\"Receive FindID\", (message) => {\r\n      resolve(message);\r\n    });\r\n  });\r\n};\r\n"],"mappings":"AAAA;AACA,SAASA,WAAWA,CAACC,MAAM,EAAEC,IAAI,EAAE;EACjC,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACtCJ,MAAM,CAACK,IAAI,CAAC,aAAa,EAAE;MACzBC,QAAQ,EAAEL,IAAI,CAACM;IACjB,CAAC,CAAC;IACFJ,OAAO,CAAC,CAAC,CAAC;EACZ,CAAC,CAAC;AACJ;;AAEA;AAAAK,EAAA,GATST,WAAW;AAUpBU,OAAO,CAACC,UAAU,GAAG,gBAAgBV,MAAM,EAAEC,IAAI,EAAE;EACjD,MAAMF,WAAW,CAACC,MAAM,EAAEC,IAAI,CAAC;EAC/B,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACtCJ,MAAM,CAACW,EAAE,CAAC,gBAAgB,EAAGC,OAAO,IAAK;MACvCT,OAAO,CAACS,OAAO,CAAC;IAClB,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC;AAAC,IAAAJ,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}