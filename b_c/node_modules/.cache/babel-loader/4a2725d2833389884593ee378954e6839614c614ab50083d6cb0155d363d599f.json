{"ast":null,"code":"//Find_ID_fuction.js\nconst sockets = require(\"../../Component/moudle/sockets.js\");\nconst Return_Success = 0;\nconst Return_Fail = 1;\nconst Return_Error = 2;\nfunction Make_String_All_ID(ID_Data) {\n  var return_string = \"\";\n  for (var i = 0; i < ID_Data.length; i++) {\n    return_string += ID_Data[i].User_ID + \"\\r\\n\";\n  }\n  return new Promise((resolve, reject) => {\n    resolve(return_string);\n  });\n}\n_c = Make_String_All_ID;\nasync function Check_Find_ID(formData, setFormData, navigate) {\n  try {\n    var FindID_Server_Result = await sockets.FindID_Server(formData);\n    switch (FindID_Server_Result.FindID_Result.FindID_return_result_num) {\n      case Return_Success:\n        var String_ID = await Make_String_All_ID(FindID_Server_Result.FindID_Result.FindID_return_result);\n        alert(String_ID);\n        setFormData({\n          Phone: \"\"\n        });\n        break;\n      case Return_Fail:\n        alert(\"해당하는 번호가 없습니다.\");\n        break;\n      case Return_Error:\n        alert(\"오류.\");\n        break;\n      default:\n        alert(\"관리자에게 문의하세요.\");\n        break;\n    }\n  } catch (err) {\n    console.log(\"Find-ID error: \", err);\n    alert(\"서버 오류. 다시 시도해 주세요.\");\n  } finally {\n    // sockets.Disconnect();\n  }\n}\n_c2 = Check_Find_ID;\nexport async function Find_ID(formData, setFormData, navigate) {\n  await Check_Find_ID(formData, setFormData, navigate);\n}\n_c3 = Find_ID;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Make_String_All_ID\");\n$RefreshReg$(_c2, \"Check_Find_ID\");\n$RefreshReg$(_c3, \"Find_ID\");","map":{"version":3,"names":["sockets","require","Return_Success","Return_Fail","Return_Error","Make_String_All_ID","ID_Data","return_string","i","length","User_ID","Promise","resolve","reject","_c","Check_Find_ID","formData","setFormData","navigate","FindID_Server_Result","FindID_Server","FindID_Result","FindID_return_result_num","String_ID","FindID_return_result","alert","Phone","err","console","log","_c2","Find_ID","_c3","$RefreshReg$"],"sources":["C:/Users/junsung/OneDrive/문서/GitHub/B_C/b_c/src/Function/FindID/Find_ID.js"],"sourcesContent":["//Find_ID_fuction.js\r\nconst sockets = require(\"../../Component/moudle/sockets.js\");\r\n\r\nconst Return_Success = 0;\r\nconst Return_Fail = 1;\r\nconst Return_Error = 2;\r\n\r\nfunction Make_String_All_ID(ID_Data) {\r\n  var return_string = \"\";\r\n\r\n  for (var i = 0; i < ID_Data.length; i++) {\r\n    return_string += ID_Data[i].User_ID + \"\\r\\n\";\r\n  }\r\n\r\n  return new Promise((resolve, reject) => {\r\n    resolve(return_string);\r\n  });\r\n}\r\n\r\nasync function Check_Find_ID(formData, setFormData, navigate) {\r\n  try {\r\n    var FindID_Server_Result = await sockets.FindID_Server(formData);\r\n    switch (FindID_Server_Result.FindID_Result.FindID_return_result_num) {\r\n      case Return_Success:\r\n        var String_ID = await Make_String_All_ID(\r\n          FindID_Server_Result.FindID_Result.FindID_return_result\r\n        );\r\n        alert(String_ID);\r\n        setFormData({\r\n          Phone: \"\",\r\n        });\r\n        break;\r\n      case Return_Fail:\r\n        alert(\"해당하는 번호가 없습니다.\");\r\n        break;\r\n      case Return_Error:\r\n        alert(\"오류.\");\r\n        break;\r\n      default:\r\n        alert(\"관리자에게 문의하세요.\");\r\n        break;\r\n    }\r\n  } catch (err) {\r\n    console.log(\"Find-ID error: \", err);\r\n    alert(\"서버 오류. 다시 시도해 주세요.\");\r\n  } finally {\r\n    // sockets.Disconnect();\r\n  }\r\n}\r\n\r\nexport async function Find_ID(formData, setFormData, navigate) {\r\n  await Check_Find_ID(formData, setFormData, navigate);\r\n}\r\n"],"mappings":"AAAA;AACA,MAAMA,OAAO,GAAGC,OAAO,CAAC,mCAAmC,CAAC;AAE5D,MAAMC,cAAc,GAAG,CAAC;AACxB,MAAMC,WAAW,GAAG,CAAC;AACrB,MAAMC,YAAY,GAAG,CAAC;AAEtB,SAASC,kBAAkBA,CAACC,OAAO,EAAE;EACnC,IAAIC,aAAa,GAAG,EAAE;EAEtB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,OAAO,CAACG,MAAM,EAAED,CAAC,EAAE,EAAE;IACvCD,aAAa,IAAID,OAAO,CAACE,CAAC,CAAC,CAACE,OAAO,GAAG,MAAM;EAC9C;EAEA,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACtCD,OAAO,CAACL,aAAa,CAAC;EACxB,CAAC,CAAC;AACJ;AAACO,EAAA,GAVQT,kBAAkB;AAY3B,eAAeU,aAAaA,CAACC,QAAQ,EAAEC,WAAW,EAAEC,QAAQ,EAAE;EAC5D,IAAI;IACF,IAAIC,oBAAoB,GAAG,MAAMnB,OAAO,CAACoB,aAAa,CAACJ,QAAQ,CAAC;IAChE,QAAQG,oBAAoB,CAACE,aAAa,CAACC,wBAAwB;MACjE,KAAKpB,cAAc;QACjB,IAAIqB,SAAS,GAAG,MAAMlB,kBAAkB,CACtCc,oBAAoB,CAACE,aAAa,CAACG,oBACrC,CAAC;QACDC,KAAK,CAACF,SAAS,CAAC;QAChBN,WAAW,CAAC;UACVS,KAAK,EAAE;QACT,CAAC,CAAC;QACF;MACF,KAAKvB,WAAW;QACdsB,KAAK,CAAC,gBAAgB,CAAC;QACvB;MACF,KAAKrB,YAAY;QACfqB,KAAK,CAAC,KAAK,CAAC;QACZ;MACF;QACEA,KAAK,CAAC,cAAc,CAAC;QACrB;IACJ;EACF,CAAC,CAAC,OAAOE,GAAG,EAAE;IACZC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEF,GAAG,CAAC;IACnCF,KAAK,CAAC,oBAAoB,CAAC;EAC7B,CAAC,SAAS;IACR;EAAA;AAEJ;AAACK,GAAA,GA7Bcf,aAAa;AA+B5B,OAAO,eAAegB,OAAOA,CAACf,QAAQ,EAAEC,WAAW,EAAEC,QAAQ,EAAE;EAC7D,MAAMH,aAAa,CAACC,QAAQ,EAAEC,WAAW,EAAEC,QAAQ,CAAC;AACtD;AAACc,GAAA,GAFqBD,OAAO;AAAA,IAAAjB,EAAA,EAAAgB,GAAA,EAAAE,GAAA;AAAAC,YAAA,CAAAnB,EAAA;AAAAmB,YAAA,CAAAH,GAAA;AAAAG,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}