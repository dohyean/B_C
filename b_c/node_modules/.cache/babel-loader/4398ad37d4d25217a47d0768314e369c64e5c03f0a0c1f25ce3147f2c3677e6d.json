{"ast":null,"code":"// sign_up_function.js\nimport { CheckUserInfo, checkFormData } from \"./CheckUserInput.js\";\nexport const Sign_Up = (formData, setFormData, navigate) => {\n  var passwordRegex = /^(?=.*[a-zA-Z])(?=.*[0-9])(?=.*[!@#$%^&*?_]).{8,32}$/;\n  const phoneRegex = /^\\d{3}-\\d{4}-\\d{4}$/;\n  const keysToCheck = [\"ID\", \"PW\", \"confirmPW\", \"nickname\", \"name\", \"Phone\", \"Birth\"];\n  if (!checkFormData(formData, keysToCheck)) {\n    return;\n  }\n  if (!phoneRegex.test(formData.Phone)) {\n    alert(\"전화번호는 010-1234-5678 같이 입력해야 합니다.\");\n    return;\n  }\n  if (!passwordRegex.test(formData.PW)) {\n    alert(\"비밀번호는 8~32자 이내의 영문자, 숫자 및 특수 문자를 포함해야 합니다.\");\n    return;\n  }\n  if (formData.PW !== formData.confirmPW) {\n    alert(\"비밀번호가 일치하지 않습니다.\");\n    return;\n  }\n  alert(JSON.stringify(formData));\n\n  // 회원 가입 성공 시 초기화\n  setFormData({\n    ID: \"\",\n    PW: \"\",\n    confirmPW: \"\",\n    nickname: \"\",\n    name: \"\",\n    Phone: \"\",\n    Birth: \"\"\n  });\n  alert(\"회원가입 완료\");\n  navigate(\"/Login\");\n};\n_c = Sign_Up;\nvar _c;\n$RefreshReg$(_c, \"Sign_Up\");","map":{"version":3,"names":["CheckUserInfo","checkFormData","Sign_Up","formData","setFormData","navigate","passwordRegex","phoneRegex","keysToCheck","test","Phone","alert","PW","confirmPW","JSON","stringify","ID","nickname","name","Birth","_c","$RefreshReg$"],"sources":["C:/Users/junsung/OneDrive/문서/GitHub/B_C/b_c/src/Function/SignUp_Sign_up.js"],"sourcesContent":["// sign_up_function.js\r\nimport { CheckUserInfo, checkFormData } from \"./CheckUserInput.js\";\r\n\r\nexport const Sign_Up = (formData, setFormData, navigate) => {\r\n  var passwordRegex = /^(?=.*[a-zA-Z])(?=.*[0-9])(?=.*[!@#$%^&*?_]).{8,32}$/;\r\n  const phoneRegex = /^\\d{3}-\\d{4}-\\d{4}$/;\r\n\r\n  const keysToCheck = [\r\n    \"ID\",\r\n    \"PW\",\r\n    \"confirmPW\",\r\n    \"nickname\",\r\n    \"name\",\r\n    \"Phone\",\r\n    \"Birth\",\r\n  ];\r\n  if (!checkFormData(formData, keysToCheck)) {\r\n    return;\r\n  }\r\n\r\n  if (!phoneRegex.test(formData.Phone)) {\r\n    alert(\"전화번호는 010-1234-5678 같이 입력해야 합니다.\");\r\n    return;\r\n  }\r\n\r\n  if (!passwordRegex.test(formData.PW)) {\r\n    alert(\r\n      \"비밀번호는 8~32자 이내의 영문자, 숫자 및 특수 문자를 포함해야 합니다.\"\r\n    );\r\n    return;\r\n  }\r\n\r\n  if (formData.PW !== formData.confirmPW) {\r\n    alert(\"비밀번호가 일치하지 않습니다.\");\r\n    return;\r\n  }\r\n\r\n  alert(JSON.stringify(formData));\r\n\r\n  // 회원 가입 성공 시 초기화\r\n  setFormData({\r\n    ID: \"\",\r\n    PW: \"\",\r\n    confirmPW: \"\",\r\n    nickname: \"\",\r\n    name: \"\",\r\n    Phone: \"\",\r\n    Birth: \"\",\r\n  });\r\n\r\n  alert(\"회원가입 완료\");\r\n\r\n  navigate(\"/Login\");\r\n};\r\n"],"mappings":"AAAA;AACA,SAASA,aAAa,EAAEC,aAAa,QAAQ,qBAAqB;AAElE,OAAO,MAAMC,OAAO,GAAGA,CAACC,QAAQ,EAAEC,WAAW,EAAEC,QAAQ,KAAK;EAC1D,IAAIC,aAAa,GAAG,sDAAsD;EAC1E,MAAMC,UAAU,GAAG,qBAAqB;EAExC,MAAMC,WAAW,GAAG,CAClB,IAAI,EACJ,IAAI,EACJ,WAAW,EACX,UAAU,EACV,MAAM,EACN,OAAO,EACP,OAAO,CACR;EACD,IAAI,CAACP,aAAa,CAACE,QAAQ,EAAEK,WAAW,CAAC,EAAE;IACzC;EACF;EAEA,IAAI,CAACD,UAAU,CAACE,IAAI,CAACN,QAAQ,CAACO,KAAK,CAAC,EAAE;IACpCC,KAAK,CAAC,kCAAkC,CAAC;IACzC;EACF;EAEA,IAAI,CAACL,aAAa,CAACG,IAAI,CAACN,QAAQ,CAACS,EAAE,CAAC,EAAE;IACpCD,KAAK,CACH,4CACF,CAAC;IACD;EACF;EAEA,IAAIR,QAAQ,CAACS,EAAE,KAAKT,QAAQ,CAACU,SAAS,EAAE;IACtCF,KAAK,CAAC,kBAAkB,CAAC;IACzB;EACF;EAEAA,KAAK,CAACG,IAAI,CAACC,SAAS,CAACZ,QAAQ,CAAC,CAAC;;EAE/B;EACAC,WAAW,CAAC;IACVY,EAAE,EAAE,EAAE;IACNJ,EAAE,EAAE,EAAE;IACNC,SAAS,EAAE,EAAE;IACbI,QAAQ,EAAE,EAAE;IACZC,IAAI,EAAE,EAAE;IACRR,KAAK,EAAE,EAAE;IACTS,KAAK,EAAE;EACT,CAAC,CAAC;EAEFR,KAAK,CAAC,SAAS,CAAC;EAEhBN,QAAQ,CAAC,QAAQ,CAAC;AACpB,CAAC;AAACe,EAAA,GAlDWlB,OAAO;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}