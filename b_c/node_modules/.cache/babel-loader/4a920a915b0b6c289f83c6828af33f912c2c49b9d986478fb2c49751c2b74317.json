{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\n// src/hooks/useFormErrors.js\nimport { useState } from \"react\";\nexport const handleChangeWithErrorCheck = (e, handleChange, updateErrors, formData) => {\n  const {\n    name,\n    value\n  } = e.target;\n  handleChange(e);\n  updateErrors(name, value, formData);\n};\n//회원가입\nexport const handleSubmit_Sign_Up = (e, formData, checkErrors, Sign_Up, setFormData, navigate) => {\n  e.preventDefault();\n  const hasErrors = checkErrors(formData);\n  if (!hasErrors) {\n    Sign_Up(formData, setFormData, navigate);\n  }\n};\n//아이디 찾기\nexport const handleSubmit_Find_ID = (e, formData, checkErrors, Find_ID, setFormData, navigate) => {\n  e.preventDefault();\n  const hasErrors = checkErrors(formData);\n  if (!hasErrors) {\n    Find_ID(formData, setFormData, navigate);\n  }\n};\n//비밀번호 찾기\nexport const handleSubmit_Find_PW = (e, formData, checkErrors, Find_PW, setFormData, navigate) => {\n  e.preventDefault();\n  const hasErrors = checkErrors(formData);\n  if (!hasErrors) {\n    Find_PW(formData, setFormData, navigate);\n  }\n};\n\n//회원가입\nexport const useFormErrors_SignUP = initialState => {\n  _s();\n  const [errors, setErrors] = useState(initialState);\n  const validatePhone = phone => {\n    const phoneRegex = /^010-\\d{4}-\\d{4}$/;\n    return phoneRegex.test(phone);\n  };\n  const validatePassword = password => {\n    // 비밀번호는 최소 8자 이상, 하나 이상의 숫자와 하나의 특수문자를 포함해야 한다고 가정\n    const passwordRegex = /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[!@#$%^&*])[A-Za-z\\d!@#$%^&*]{8,}$/;\n    return passwordRegex.test(password);\n  };\n  const updateErrors = (name, value, formData) => {\n    setErrors(prevErrors => {\n      const newErrors = {\n        ...prevErrors\n      };\n      if (name === \"ID\") newErrors.ID = !value;\n      if (name === \"PW\") newErrors.PW = !value || !validatePassword(value);\n      if (name === \"confirmPW\") newErrors.confirmPW = !value || value !== formData.PW;\n      if (name === \"nickname\") newErrors.nickname = !value;\n      if (name === \"name\") newErrors.name = !value;\n      if (name === \"Phone\") newErrors.Phone = !validatePhone(value);\n      if (name === \"Birth\") newErrors.Birth = !value;\n      return newErrors;\n    });\n  };\n  const checkErrors = formData => {\n    const newErrors = {\n      ID: !formData.ID,\n      PW: !formData.PW || !validatePassword(formData.PW),\n      confirmPW: !formData.confirmPW || formData.PW !== formData.confirmPW,\n      nickname: !formData.nickname,\n      name: !formData.name,\n      Phone: !formData.Phone || !validatePhone(formData.Phone),\n      Birth: !formData.Birth\n    };\n    setErrors(newErrors);\n    return Object.values(newErrors).some(error => error);\n  };\n  return {\n    errors,\n    updateErrors,\n    checkErrors\n  };\n};\n\n//아이디 찾기\n_s(useFormErrors_SignUP, \"wWorJWFubF577LtPW7wDbLKDpY4=\");\nexport const useFormErrors_FindID = initialState => {\n  _s2();\n  const [errors, setErrors] = useState(initialState);\n  const validatePhone = phone => {\n    const phoneRegex = /^010-\\d{4}-\\d{4}$/;\n    return phoneRegex.test(phone);\n  };\n  const updateErrors = (name, value, formData) => {\n    setErrors(prevErrors => {\n      const newErrors = {\n        ...prevErrors\n      };\n      if (name === \"Phone\") newErrors.Phone = !validatePhone(value);\n      return newErrors;\n    });\n  };\n  const checkErrors = formData => {\n    const newErrors = {\n      Phone: !formData.Phone || !validatePhone(formData.Phone)\n    };\n    setErrors(newErrors);\n    return Object.values(newErrors).some(error => error);\n  };\n  return {\n    errors,\n    updateErrors,\n    checkErrors\n  };\n};\n\n//비밀번호 찾기\n_s2(useFormErrors_FindID, \"wWorJWFubF577LtPW7wDbLKDpY4=\");\nexport const useFormErrors_FindPW = initialState => {\n  _s3();\n  const [errors, setErrors] = useState(initialState);\n  const validatePhone = phone => {\n    const phoneRegex = /^010-\\d{4}-\\d{4}$/;\n    return phoneRegex.test(phone);\n  };\n  const updateErrors = (name, value, formData) => {\n    setErrors(prevErrors => {\n      const newErrors = {\n        ...prevErrors\n      };\n      if (name === \"ID\") newErrors.ID = !value;\n      if (name === \"Phone\") newErrors.Phone = !validatePhone(value);\n      return newErrors;\n    });\n  };\n  const checkErrors = formData => {\n    const newErrors = {\n      ID: !formData.ID,\n      Phone: !formData.Phone || !validatePhone(formData.Phone)\n    };\n    setErrors(newErrors);\n    return Object.values(newErrors).some(error => error);\n  };\n  return {\n    errors,\n    updateErrors,\n    checkErrors\n  };\n};\n_s3(useFormErrors_FindPW, \"wWorJWFubF577LtPW7wDbLKDpY4=\");","map":{"version":3,"names":["useState","handleChangeWithErrorCheck","e","handleChange","updateErrors","formData","name","value","target","handleSubmit_Sign_Up","checkErrors","Sign_Up","setFormData","navigate","preventDefault","hasErrors","handleSubmit_Find_ID","Find_ID","handleSubmit_Find_PW","Find_PW","useFormErrors_SignUP","initialState","_s","errors","setErrors","validatePhone","phone","phoneRegex","test","validatePassword","password","passwordRegex","prevErrors","newErrors","ID","PW","confirmPW","nickname","Phone","Birth","Object","values","some","error","useFormErrors_FindID","_s2","useFormErrors_FindPW","_s3"],"sources":["C:/Users/junsung/OneDrive/문서/GitHub/B_C/b_c/src/Function/useFormErrors.js"],"sourcesContent":["// src/hooks/useFormErrors.js\r\nimport { useState } from \"react\";\r\n\r\nexport const handleChangeWithErrorCheck = (\r\n  e,\r\n  handleChange,\r\n  updateErrors,\r\n  formData\r\n) => {\r\n  const { name, value } = e.target;\r\n  handleChange(e);\r\n  updateErrors(name, value, formData);\r\n};\r\n//회원가입\r\nexport const handleSubmit_Sign_Up = (\r\n  e,\r\n  formData,\r\n  checkErrors,\r\n  Sign_Up,\r\n  setFormData,\r\n  navigate\r\n) => {\r\n  e.preventDefault();\r\n  const hasErrors = checkErrors(formData);\r\n  if (!hasErrors) {\r\n    Sign_Up(formData, setFormData, navigate);\r\n  }\r\n};\r\n//아이디 찾기\r\nexport const handleSubmit_Find_ID = (\r\n  e,\r\n  formData,\r\n  checkErrors,\r\n  Find_ID,\r\n  setFormData,\r\n  navigate\r\n) => {\r\n  e.preventDefault();\r\n  const hasErrors = checkErrors(formData);\r\n  if (!hasErrors) {\r\n    Find_ID(formData, setFormData, navigate);\r\n  }\r\n};\r\n//비밀번호 찾기\r\nexport const handleSubmit_Find_PW = (\r\n  e,\r\n  formData,\r\n  checkErrors,\r\n  Find_PW,\r\n  setFormData,\r\n  navigate\r\n) => {\r\n  e.preventDefault();\r\n  const hasErrors = checkErrors(formData);\r\n  if (!hasErrors) {\r\n    Find_PW(formData, setFormData, navigate);\r\n  }\r\n};\r\n\r\n//회원가입\r\nexport const useFormErrors_SignUP = (initialState) => {\r\n  const [errors, setErrors] = useState(initialState);\r\n\r\n  const validatePhone = (phone) => {\r\n    const phoneRegex = /^010-\\d{4}-\\d{4}$/;\r\n    return phoneRegex.test(phone);\r\n  };\r\n\r\n  const validatePassword = (password) => {\r\n    // 비밀번호는 최소 8자 이상, 하나 이상의 숫자와 하나의 특수문자를 포함해야 한다고 가정\r\n    const passwordRegex =\r\n      /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[!@#$%^&*])[A-Za-z\\d!@#$%^&*]{8,}$/;\r\n    return passwordRegex.test(password);\r\n  };\r\n  const updateErrors = (name, value, formData) => {\r\n    setErrors((prevErrors) => {\r\n      const newErrors = { ...prevErrors };\r\n      if (name === \"ID\") newErrors.ID = !value;\r\n      if (name === \"PW\") newErrors.PW = !value || !validatePassword(value);\r\n      if (name === \"confirmPW\")\r\n        newErrors.confirmPW = !value || value !== formData.PW;\r\n      if (name === \"nickname\") newErrors.nickname = !value;\r\n      if (name === \"name\") newErrors.name = !value;\r\n      if (name === \"Phone\") newErrors.Phone = !validatePhone(value);\r\n      if (name === \"Birth\") newErrors.Birth = !value;\r\n      return newErrors;\r\n    });\r\n  };\r\n\r\n  const checkErrors = (formData) => {\r\n    const newErrors = {\r\n      ID: !formData.ID,\r\n      PW: !formData.PW || !validatePassword(formData.PW),\r\n      confirmPW: !formData.confirmPW || formData.PW !== formData.confirmPW,\r\n      nickname: !formData.nickname,\r\n      name: !formData.name,\r\n      Phone: !formData.Phone || !validatePhone(formData.Phone),\r\n      Birth: !formData.Birth,\r\n    };\r\n    setErrors(newErrors);\r\n    return Object.values(newErrors).some((error) => error);\r\n  };\r\n\r\n  return { errors, updateErrors, checkErrors };\r\n};\r\n\r\n//아이디 찾기\r\nexport const useFormErrors_FindID = (initialState) => {\r\n  const [errors, setErrors] = useState(initialState);\r\n\r\n  const validatePhone = (phone) => {\r\n    const phoneRegex = /^010-\\d{4}-\\d{4}$/;\r\n    return phoneRegex.test(phone);\r\n  };\r\n\r\n  const updateErrors = (name, value, formData) => {\r\n    setErrors((prevErrors) => {\r\n      const newErrors = { ...prevErrors };\r\n      if (name === \"Phone\") newErrors.Phone = !validatePhone(value);\r\n      return newErrors;\r\n    });\r\n  };\r\n\r\n  const checkErrors = (formData) => {\r\n    const newErrors = {\r\n      Phone: !formData.Phone || !validatePhone(formData.Phone),\r\n    };\r\n    setErrors(newErrors);\r\n    return Object.values(newErrors).some((error) => error);\r\n  };\r\n\r\n  return { errors, updateErrors, checkErrors };\r\n};\r\n\r\n//비밀번호 찾기\r\nexport const useFormErrors_FindPW = (initialState) => {\r\n  const [errors, setErrors] = useState(initialState);\r\n\r\n  const validatePhone = (phone) => {\r\n    const phoneRegex = /^010-\\d{4}-\\d{4}$/;\r\n    return phoneRegex.test(phone);\r\n  };\r\n\r\n  const updateErrors = (name, value, formData) => {\r\n    setErrors((prevErrors) => {\r\n      const newErrors = { ...prevErrors };\r\n      if (name === \"ID\") newErrors.ID = !value;\r\n      if (name === \"Phone\") newErrors.Phone = !validatePhone(value);\r\n      return newErrors;\r\n    });\r\n  };\r\n\r\n  const checkErrors = (formData) => {\r\n    const newErrors = {\r\n      ID: !formData.ID,\r\n      Phone: !formData.Phone || !validatePhone(formData.Phone),\r\n    };\r\n    setErrors(newErrors);\r\n    return Object.values(newErrors).some((error) => error);\r\n  };\r\n\r\n  return { errors, updateErrors, checkErrors };\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}