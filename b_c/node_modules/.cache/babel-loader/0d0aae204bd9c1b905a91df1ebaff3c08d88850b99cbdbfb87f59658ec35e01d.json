{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\junsung\\\\OneDrive\\\\\\uBB38\\uC11C\\\\GitHub\\\\B_C\\\\b_c\\\\src\\\\Component\\\\SignUp.js\",\n  _s = $RefreshSig$();\n// import { useNavigate } from \"react-router-dom\";\n// import \"../Style/SignUp.css\";\n// import Menubar from \"./Menubar\";\n// import { AiFillEye, AiFillEyeInvisible } from \"react-icons/ai\";\n// import { Sign_Up } from \"../Function/SignUp_Sign_up\";\n// import { usePasswordToggle } from \"../Function/SignUp_PasswordToggle\";\n// import { useFormData } from \"../Function/useFormData\";\n// import {\n//   useFormErrors,\n//   handleChangeWithErrorCheck,\n//   handleSubmit,\n// } from \"../Function/useFormErrors\";\n\n// function SignUp() {\n//   const navigate = useNavigate();\n\n//   const [formData, handleChange, setFormData] = useFormData({\n//     ID: \"\",\n//     PW: \"\",\n//     confirmPW: \"\",\n//     nickname: \"\",\n//     name: \"\",\n//     Phone: \"\",\n//     Birth: \"\",\n//   });\n\n//   const { errors, updateErrors, checkErrors } = useFormErrors({\n//     ID: false,\n//     PW: false,\n//     confirmPW: false,\n//     nickname: false,\n//     name: false,\n//     Phone: false,\n//     Birth: false,\n//   });\n\n//   const {\n//     showPassword,\n//     toggleShowPassword,\n//     showConfirmPassword,\n//     toggleShowConfirmPassword,\n//   } = usePasswordToggle();\n\n//   const handleInputChange = (e) => {\n//     handleChangeWithErrorCheck(e, handleChange, updateErrors, formData);\n//   };\n\n//   const handleFormSubmit = (e) => {\n//     handleSubmit(e, formData, checkErrors, Sign_Up, setFormData, navigate);\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <Menubar></Menubar>\n//       <div className=\"App-content-SignUp\">\n//         <form onSubmit={handleFormSubmit} className=\"signup-form\">\n//           <div>\n//             <input\n//               name=\"ID\"\n//               className=\"text\"\n//               value={formData.ID}\n//               onChange={handleInputChange}\n//               placeholder=\"아이디\"\n//             ></input>\n//           </div>\n//           <div className=\"text-box\">\n//             {errors.ID && \"아이디를 입력해 주세요.\"}\n//           </div>\n//           <div className=\"password-field\">\n//             <input\n//               type={showPassword ? \"text\" : \"password\"}\n//               name=\"PW\"\n//               className=\"text password-input\"\n//               value={formData.PW}\n//               onChange={handleInputChange}\n//               placeholder=\"비밀번호(8 ~ 32자) 및 특수문자 포함\"\n//             ></input>\n//             <span onClick={toggleShowPassword} className=\"password-icon\">\n//               {showPassword ? <AiFillEye /> : <AiFillEyeInvisible />}\n//             </span>\n//           </div>\n//           <div className=\"text-box\">\n//             {errors.PW && \"비밀번호를 입력해 주세요.\"}\n//           </div>\n//           <div className=\"password-field\">\n//             <input\n//               type={showConfirmPassword ? \"text\" : \"password\"}\n//               name=\"confirmPW\"\n//               className=\"text\"\n//               value={formData.confirmPW}\n//               onChange={handleInputChange}\n//               placeholder=\"비밀번호 재입력\"\n//             ></input>\n//             <span onClick={toggleShowConfirmPassword} className=\"password-icon\">\n//               {showConfirmPassword ? <AiFillEye /> : <AiFillEyeInvisible />}\n//             </span>\n//           </div>\n//           <div className=\"text-box\">\n//             {errors.confirmPW && \"비밀번호가 일치하지 않습니다.\"}\n//           </div>\n//           <div>\n//             <input\n//               name=\"nickname\"\n//               className=\"text\"\n//               value={formData.nickname}\n//               onChange={handleInputChange}\n//               placeholder=\"별명\"\n//             ></input>\n//           </div>\n//           <div className=\"text-box\">\n//             {errors.nickname && \"별명을 입력해 주세요.\"}\n//           </div>\n//           <div>\n//             <input\n//               name=\"name\"\n//               className=\"text\"\n//               value={formData.name}\n//               onChange={handleInputChange}\n//               placeholder=\"이름\"\n//             ></input>\n//           </div>\n//           <div className=\"text-box\">\n//             {errors.name && \"이름을 입력해 주세요.\"}\n//           </div>\n//           <div>\n//             <input\n//               name=\"Phone\"\n//               className=\"text\"\n//               value={formData.Phone}\n//               onChange={handleInputChange}\n//               placeholder=\"전화번호\"\n//             ></input>\n//           </div>\n//           <div className=\"text-box\">\n//             {errors.Phone && \"형식이 올바르지 않습니다. 예: 010-1234-5678\"}\n//           </div>\n//           <div>\n//             <input\n//               name=\"Birth\"\n//               type=\"date\"\n//               className=\"text\"\n//               value={formData.Birth}\n//               onChange={handleInputChange}\n//               onKeyDown={(event) => {\n//                 event.preventDefault();\n//               }}\n//               placeholder=\"생년월일 (YYYY/MM/DD)\"\n//             />\n//           </div>\n//           <div className=\"text-box\">\n//             {errors.Birth && \"생년월일을 입력해 주세요.\"}\n//           </div>\n//           <button type=\"submit\" className=\"SignUp-button-SignUp\">\n//             회원 가입\n//           </button>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default SignUp;\n\nimport React from \"react\";\nimport \"../Style/FindID.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useFormData } from \"../Function/useFormData\";\nimport { Find_ID } from \"../Function/FindID_Find_ID\";\nimport { useFormErrors, handleChangeWithErrorCheck, handleSubmit_Find_ID } from \"../hooks/useFormErrors\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FindID() {\n  _s();\n  const navigate = useNavigate();\n  const [formData, handleChange, setFormData] = useFormData({\n    Phone: \"\"\n  });\n  const {\n    errors,\n    updateErrors,\n    checkErrors\n  } = useFormErrors({\n    Phone: false\n  });\n  const handleInputChange = e => {\n    handleChangeWithErrorCheck(e, handleChange, updateErrors, formData);\n  };\n  const handleFormSubmit = e => {\n    handleSubmit_Find_ID(e, formData, checkErrors, Find_ID, setFormData, navigate);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"FindID-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uC544\\uC774\\uB514 \\uCC3E\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleFormSubmit,\n      className: \"find-id-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"Phone\",\n          children: \"\\uC804\\uD654\\uBC88\\uD638\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"Phone\",\n          name: \"Phone\",\n          className: `text ${errors.Phone ? \"error\" : \"\"}`,\n          value: formData.Phone,\n          onChange: handleInputChange,\n          placeholder: \"\\uC804\\uD654\\uBC88\\uD638\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), errors.Phone && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: \"\\uC804\\uD654\\uBC88\\uD638 \\uD615\\uC2DD\\uC774 \\uC62C\\uBC14\\uB974\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4. \\uC608: 010-1234-5678\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"FindID-button-FindID\",\n        children: \"\\uCC3E\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 201,\n    columnNumber: 5\n  }, this);\n}\n_s(FindID, \"AhKoQIrSNy13rFqSevl99+X2HcU=\", false, function () {\n  return [useNavigate, useFormData, useFormErrors];\n});\n_c = FindID;\nexport default FindID;\nvar _c;\n$RefreshReg$(_c, \"FindID\");","map":{"version":3,"names":["React","useNavigate","useFormData","Find_ID","useFormErrors","handleChangeWithErrorCheck","handleSubmit_Find_ID","jsxDEV","_jsxDEV","FindID","_s","navigate","formData","handleChange","setFormData","Phone","errors","updateErrors","checkErrors","handleInputChange","e","handleFormSubmit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","name","value","onChange","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/junsung/OneDrive/문서/GitHub/B_C/b_c/src/Component/SignUp.js"],"sourcesContent":["// import { useNavigate } from \"react-router-dom\";\r\n// import \"../Style/SignUp.css\";\r\n// import Menubar from \"./Menubar\";\r\n// import { AiFillEye, AiFillEyeInvisible } from \"react-icons/ai\";\r\n// import { Sign_Up } from \"../Function/SignUp_Sign_up\";\r\n// import { usePasswordToggle } from \"../Function/SignUp_PasswordToggle\";\r\n// import { useFormData } from \"../Function/useFormData\";\r\n// import {\r\n//   useFormErrors,\r\n//   handleChangeWithErrorCheck,\r\n//   handleSubmit,\r\n// } from \"../Function/useFormErrors\";\r\n\r\n// function SignUp() {\r\n//   const navigate = useNavigate();\r\n\r\n//   const [formData, handleChange, setFormData] = useFormData({\r\n//     ID: \"\",\r\n//     PW: \"\",\r\n//     confirmPW: \"\",\r\n//     nickname: \"\",\r\n//     name: \"\",\r\n//     Phone: \"\",\r\n//     Birth: \"\",\r\n//   });\r\n\r\n//   const { errors, updateErrors, checkErrors } = useFormErrors({\r\n//     ID: false,\r\n//     PW: false,\r\n//     confirmPW: false,\r\n//     nickname: false,\r\n//     name: false,\r\n//     Phone: false,\r\n//     Birth: false,\r\n//   });\r\n\r\n//   const {\r\n//     showPassword,\r\n//     toggleShowPassword,\r\n//     showConfirmPassword,\r\n//     toggleShowConfirmPassword,\r\n//   } = usePasswordToggle();\r\n\r\n//   const handleInputChange = (e) => {\r\n//     handleChangeWithErrorCheck(e, handleChange, updateErrors, formData);\r\n//   };\r\n\r\n//   const handleFormSubmit = (e) => {\r\n//     handleSubmit(e, formData, checkErrors, Sign_Up, setFormData, navigate);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"App\">\r\n//       <Menubar></Menubar>\r\n//       <div className=\"App-content-SignUp\">\r\n//         <form onSubmit={handleFormSubmit} className=\"signup-form\">\r\n//           <div>\r\n//             <input\r\n//               name=\"ID\"\r\n//               className=\"text\"\r\n//               value={formData.ID}\r\n//               onChange={handleInputChange}\r\n//               placeholder=\"아이디\"\r\n//             ></input>\r\n//           </div>\r\n//           <div className=\"text-box\">\r\n//             {errors.ID && \"아이디를 입력해 주세요.\"}\r\n//           </div>\r\n//           <div className=\"password-field\">\r\n//             <input\r\n//               type={showPassword ? \"text\" : \"password\"}\r\n//               name=\"PW\"\r\n//               className=\"text password-input\"\r\n//               value={formData.PW}\r\n//               onChange={handleInputChange}\r\n//               placeholder=\"비밀번호(8 ~ 32자) 및 특수문자 포함\"\r\n//             ></input>\r\n//             <span onClick={toggleShowPassword} className=\"password-icon\">\r\n//               {showPassword ? <AiFillEye /> : <AiFillEyeInvisible />}\r\n//             </span>\r\n//           </div>\r\n//           <div className=\"text-box\">\r\n//             {errors.PW && \"비밀번호를 입력해 주세요.\"}\r\n//           </div>\r\n//           <div className=\"password-field\">\r\n//             <input\r\n//               type={showConfirmPassword ? \"text\" : \"password\"}\r\n//               name=\"confirmPW\"\r\n//               className=\"text\"\r\n//               value={formData.confirmPW}\r\n//               onChange={handleInputChange}\r\n//               placeholder=\"비밀번호 재입력\"\r\n//             ></input>\r\n//             <span onClick={toggleShowConfirmPassword} className=\"password-icon\">\r\n//               {showConfirmPassword ? <AiFillEye /> : <AiFillEyeInvisible />}\r\n//             </span>\r\n//           </div>\r\n//           <div className=\"text-box\">\r\n//             {errors.confirmPW && \"비밀번호가 일치하지 않습니다.\"}\r\n//           </div>\r\n//           <div>\r\n//             <input\r\n//               name=\"nickname\"\r\n//               className=\"text\"\r\n//               value={formData.nickname}\r\n//               onChange={handleInputChange}\r\n//               placeholder=\"별명\"\r\n//             ></input>\r\n//           </div>\r\n//           <div className=\"text-box\">\r\n//             {errors.nickname && \"별명을 입력해 주세요.\"}\r\n//           </div>\r\n//           <div>\r\n//             <input\r\n//               name=\"name\"\r\n//               className=\"text\"\r\n//               value={formData.name}\r\n//               onChange={handleInputChange}\r\n//               placeholder=\"이름\"\r\n//             ></input>\r\n//           </div>\r\n//           <div className=\"text-box\">\r\n//             {errors.name && \"이름을 입력해 주세요.\"}\r\n//           </div>\r\n//           <div>\r\n//             <input\r\n//               name=\"Phone\"\r\n//               className=\"text\"\r\n//               value={formData.Phone}\r\n//               onChange={handleInputChange}\r\n//               placeholder=\"전화번호\"\r\n//             ></input>\r\n//           </div>\r\n//           <div className=\"text-box\">\r\n//             {errors.Phone && \"형식이 올바르지 않습니다. 예: 010-1234-5678\"}\r\n//           </div>\r\n//           <div>\r\n//             <input\r\n//               name=\"Birth\"\r\n//               type=\"date\"\r\n//               className=\"text\"\r\n//               value={formData.Birth}\r\n//               onChange={handleInputChange}\r\n//               onKeyDown={(event) => {\r\n//                 event.preventDefault();\r\n//               }}\r\n//               placeholder=\"생년월일 (YYYY/MM/DD)\"\r\n//             />\r\n//           </div>\r\n//           <div className=\"text-box\">\r\n//             {errors.Birth && \"생년월일을 입력해 주세요.\"}\r\n//           </div>\r\n//           <button type=\"submit\" className=\"SignUp-button-SignUp\">\r\n//             회원 가입\r\n//           </button>\r\n//         </form>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default SignUp;\r\n\r\nimport React from \"react\";\r\nimport \"../Style/FindID.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useFormData } from \"../Function/useFormData\";\r\nimport { Find_ID } from \"../Function/FindID_Find_ID\";\r\nimport {\r\n  useFormErrors,\r\n  handleChangeWithErrorCheck,\r\n  handleSubmit_Find_ID,\r\n} from \"../hooks/useFormErrors\";\r\n\r\nfunction FindID() {\r\n  const navigate = useNavigate();\r\n  const [formData, handleChange, setFormData] = useFormData({\r\n    Phone: \"\",\r\n  });\r\n\r\n  const { errors, updateErrors, checkErrors } = useFormErrors({\r\n    Phone: false,\r\n  });\r\n\r\n  const handleInputChange = (e) => {\r\n    handleChangeWithErrorCheck(e, handleChange, updateErrors, formData);\r\n  };\r\n\r\n  const handleFormSubmit = (e) => {\r\n    handleSubmit_Find_ID(\r\n      e,\r\n      formData,\r\n      checkErrors,\r\n      Find_ID,\r\n      setFormData,\r\n      navigate\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"FindID-section\">\r\n      <h2>아이디 찾기</h2>\r\n      <form onSubmit={handleFormSubmit} className=\"find-id-form\">\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"Phone\">전화번호</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"Phone\"\r\n            name=\"Phone\"\r\n            className={`text ${errors.Phone ? \"error\" : \"\"}`}\r\n            value={formData.Phone}\r\n            onChange={handleInputChange}\r\n            placeholder=\"전화번호\"\r\n          />\r\n          {errors.Phone && (\r\n            <div className=\"error-message\">\r\n              전화번호 형식이 올바르지 않습니다. 예: 010-1234-5678\r\n            </div>\r\n          )}\r\n        </div>\r\n        <button type=\"submit\" className=\"FindID-button-FindID\">\r\n          찾기\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FindID;\r\n"],"mappingszB,OAAO,qBAAqB;AAC5B,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,WAAW,QAAQ,yBAAyB;AACrD,SAASC,OAAO,QAAQ,4BAA4B;AACpD,SACEC,aAAa,EACbC,0BAA0B,EAC1BC,oBAAoB,QACf,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAMC,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACW,QAAQ,EAAEC,YAAY,EAAEC,WAAW,CAAC,GAAGZ,WAAW,CAAC;IACxDa,KAAK,EAAE;EACT,CAAC,CAAC;EAEF,MAAM;IAAEC,MAAM;IAAEC,YAAY;IAAEC;EAAY,CAAC,GAAGd,aAAa,CAAC;IAC1DW,KAAK,EAAE;EACT,CAAC,CAAC;EAEF,MAAMI,iBAAiB,GAAIC,CAAC,IAAK;IAC/Bf,0BAA0B,CAACe,CAAC,EAAEP,YAAY,EAAEI,YAAY,EAAEL,QAAQ,CAAC;EACrE,CAAC;EAED,MAAMS,gBAAgB,GAAID,CAAC,IAAK;IAC9Bd,oBAAoB,CAClBc,CAAC,EACDR,QAAQ,EACRM,WAAW,EACXf,OAAO,EACPW,WAAW,EACXH,QACF,CAAC;EACH,CAAC;EAED,oBACEH,OAAA;IAAKc,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7Bf,OAAA;MAAAe,QAAA,EAAI;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACfnB,OAAA;MAAMoB,QAAQ,EAAEP,gBAAiB;MAACC,SAAS,EAAC,cAAc;MAAAC,QAAA,gBACxDf,OAAA;QAAKc,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzBf,OAAA;UAAOqB,OAAO,EAAC,OAAO;UAAAN,QAAA,EAAC;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACnCnB,OAAA;UACEsB,IAAI,EAAC,MAAM;UACXC,EAAE,EAAC,OAAO;UACVC,IAAI,EAAC,OAAO;UACZV,SAAS,EAAE,QAAQN,MAAM,CAACD,KAAK,GAAG,OAAO,GAAG,EAAE,EAAG;UACjDkB,KAAK,EAAErB,QAAQ,CAACG,KAAM;UACtBmB,QAAQ,EAAEf,iBAAkB;UAC5BgB,WAAW,EAAC;QAAM;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnB,CAAC,EACDX,MAAM,CAACD,KAAK,iBACXP,OAAA;UAAKc,SAAS,EAAC,eAAe;UAAAC,QAAA,EAAC;QAE/B;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CACN;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eACNnB,OAAA;QAAQsB,IAAI,EAAC,QAAQ;QAACR,SAAS,EAAC,sBAAsB;QAAAC,QAAA,EAAC;MAEvD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAACjB,EAAA,CApDQD,MAAM;EAAA,QACIR,WAAW,EACkBC,WAAW,EAIXE,aAAa;AAAA;AAAAgC,EAAA,GANpD3B,MAAM;AAsDf,eAAeA,MAAM;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}