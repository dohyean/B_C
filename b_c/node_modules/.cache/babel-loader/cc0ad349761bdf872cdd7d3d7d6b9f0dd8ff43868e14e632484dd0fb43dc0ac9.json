{"ast":null,"code":"var _s = $RefreshSig$();\n// import { useEffect } from \"react\";\n// import Quill from \"quill\";\n\n// const useQuill = (quillRef, toolbarRef) => {\n//   useEffect(() => {\n//     if (quillRef.current && toolbarRef.current) {\n//       if (!quillRef.current.__quill) {\n//         const quill = new Quill(quillRef.current, {\n//           theme: \"snow\",\n//           modules: {\n//             toolbar: {\n//               container: toolbarRef.current,\n//             },\n//           },\n//           formats: [\n//             \"header\",\n//             \"font\",\n//             \"size\",\n//             \"bold\",\n//             \"italic\",\n//             \"underline\",\n//             \"strike\",\n//             \"color\",\n//             \"background\",\n//             \"script\",\n//             \"list\",\n//             \"bullet\",\n//             \"indent\",\n//             \"align\",\n//             \"direction\",\n//             \"link\",\n//             \"image\",\n//             \"video\",\n//           ],\n//         });\n\n//         quillRef.current.__quill = true;\n\n//         // 선택 변경 이벤트 리스너 추가\n//         quill.on(\"selection-change\", (range, oldRange, source) => {\n//           if (range) {\n//             const format = quill.getFormat(range);\n//             const sizeSelect = toolbarRef.current.querySelector(\".ql-size\");\n//             if (sizeSelect) {\n//               sizeSelect.value = format.size || \"\";\n//             }\n//           }\n//         });\n\n//         // 툴바 글씨 크기 선택 이벤트 리스너 추가\n//         const sizeSelect = toolbarRef.current.querySelector(\".ql-size\");\n//         if (sizeSelect) {\n//           sizeSelect.addEventListener(\"change\", (e) => {\n//             const size = e.target.value;\n//             quill.format(\"size\", size);\n//           });\n//         }\n//       }\n//     }\n//   }, [quillRef, toolbarRef]);\n// };\n\n// export default useQuill;\n\n// import { useEffect } from \"react\";\n// import Quill from \"quill\";\n// import ImageResize from \"quill-image-resize-module\";\n\n// Quill.register(\"modules/imageResize\", ImageResize);\n\n// const useQuill = (quillRef, toolbarRef) => {\n//   useEffect(() => {\n//     if (quillRef.current && toolbarRef.current) {\n//       if (!quillRef.current.__quill) {\n//         const quill = new Quill(quillRef.current, {\n//           theme: \"snow\",\n//           modules: {\n//             toolbar: {\n//               container: toolbarRef.current,\n//             },\n//             imageResize: {\n//               // Options for image resize\n//               displaySize: true, // Show size controls\n//             },\n//           },\n//           formats: [\n//             \"header\",\n//             \"font\",\n//             \"size\",\n//             \"bold\",\n//             \"italic\",\n//             \"underline\",\n//             \"strike\",\n//             \"color\",\n//             \"background\",\n//             \"script\",\n//             \"list\",\n//             \"bullet\",\n//             \"indent\",\n//             \"align\",\n//             \"direction\",\n//             \"link\",\n//             \"image\",\n//             \"video\",\n//           ],\n//         });\n\n//         quillRef.current.__quill = true;\n\n//         // 선택 변경 이벤트 리스너 추가\n//         quill.on(\"selection-change\", (range, oldRange, source) => {\n//           if (range) {\n//             const format = quill.getFormat(range);\n//             const sizeSelect = toolbarRef.current.querySelector(\".ql-size\");\n//             if (sizeSelect) {\n//               sizeSelect.value = format.size || \"\";\n//             }\n//           }\n//         });\n\n//         // 툴바 글씨 크기 선택 이벤트 리스너 추가\n//         const sizeSelect = toolbarRef.current.querySelector(\".ql-size\");\n//         if (sizeSelect) {\n//           sizeSelect.addEventListener(\"change\", (e) => {\n//             const size = e.target.value;\n//             quill.format(\"size\", size);\n//           });\n//         }\n//       }\n//     }\n//   }, [quillRef, toolbarRef]);\n// };\n\n// export default useQuill;\n\n// import { useEffect } from \"react\";\n// import Quill from \"quill\";\n// import ImageResize from \"quill-image-resize-module\"; // 모듈 임포트\n\n// // Quill에 모듈 등록\n// Quill.register(\"modules/imageResize\", ImageResize);\n\n// const useQuill = (quillRef, toolbarRef) => {\n//   useEffect(() => {\n//     if (quillRef.current && toolbarRef.current) {\n//       if (!quillRef.current.__quill) {\n//         const quill = new Quill(quillRef.current, {\n//           theme: \"snow\",\n//           modules: {\n//             toolbar: {\n//               container: toolbarRef.current,\n//             },\n//             imageResize: {\n//               displaySize: true, // 이미지 크기 조절 UI 표시\n//             },\n//           },\n//           formats: [\n//             \"header\",\n//             \"font\",\n//             \"size\",\n//             \"bold\",\n//             \"italic\",\n//             \"underline\",\n//             \"strike\",\n//             \"color\",\n//             \"background\",\n//             \"script\",\n//             \"list\",\n//             \"bullet\",\n//             \"indent\",\n//             \"align\",\n//             \"direction\",\n//             \"link\",\n//             \"image\",\n//             \"video\",\n//           ],\n//         });\n\n//         quillRef.current.__quill = true;\n\n//         // 선택 변경 이벤트 리스너 추가\n//         quill.on(\"selection-change\", (range, oldRange, source) => {\n//           if (range) {\n//             const format = quill.getFormat(range);\n//             const sizeSelect = toolbarRef.current.querySelector(\".ql-size\");\n//             if (sizeSelect) {\n//               sizeSelect.value = format.size || \"\";\n//             }\n//           }\n//         });\n\n//         // 툴바 글씨 크기 선택 이벤트 리스너 추가\n//         const sizeSelect = toolbarRef.current.querySelector(\".ql-size\");\n//         if (sizeSelect) {\n//           sizeSelect.addEventListener(\"change\", (e) => {\n//             const size = e.target.value;\n//             quill.format(\"size\", size);\n//           });\n//         }\n//       }\n//     }\n//   }, [quillRef, toolbarRef]);\n// };\n\n// export default useQuill;\n\nimport { useEffect } from \"react\";\nimport Quill from \"quill\";\n//import Image from \"quill-image\"; // quill-image 패키지의 모듈 임포트\n\n// Quill에 이미지 모듈 등록\n//Quill.register(\"modules/image\", Image);\n\nconst useQuill = (quillRef, toolbarRef) => {\n  _s();\n  useEffect(() => {\n    if (quillRef.current && toolbarRef.current) {\n      if (!quillRef.current.__quill) {\n        const quill = new Quill(quillRef.current, {\n          theme: \"snow\",\n          modules: {\n            toolbar: {\n              container: toolbarRef.current,\n              handlers: {\n                image: () => {\n                  // 이미지 업로드 핸들러를 구현\n                  const input = document.createElement(\"input\");\n                  input.setAttribute(\"type\", \"file\");\n                  input.setAttribute(\"accept\", \"image/*\");\n                  input.click();\n                  input.onchange = () => {\n                    const file = input.files[0];\n                    if (file) {\n                      const reader = new FileReader();\n                      reader.onload = () => {\n                        const range = quill.getSelection();\n                        quill.insertEmbed(range.index, \"image\", reader.result);\n                      };\n                      reader.readAsDataURL(file);\n                    }\n                  };\n                }\n              }\n            },\n            image: {\n              // 이미지 모듈의 옵션을 설정할 수 있습니다.\n            }\n          },\n          formats: [\"header\", \"font\", \"size\", \"bold\", \"italic\", \"underline\", \"strike\", \"color\", \"background\", \"script\", \"list\", \"bullet\", \"indent\", \"align\", \"direction\", \"link\", \"image\", \"video\"]\n        });\n        quillRef.current.__quill = true;\n\n        // 선택 변경 이벤트 리스너 추가\n        quill.on(\"selection-change\", (range, oldRange, source) => {\n          if (range) {\n            const format = quill.getFormat(range);\n            const sizeSelect = toolbarRef.current.querySelector(\".ql-size\");\n            if (sizeSelect) {\n              sizeSelect.value = format.size || \"\";\n            }\n          }\n        });\n\n        // 툴바 글씨 크기 선택 이벤트 리스너 추가\n        const sizeSelect = toolbarRef.current.querySelector(\".ql-size\");\n        if (sizeSelect) {\n          sizeSelect.addEventListener(\"change\", e => {\n            const size = e.target.value;\n            quill.format(\"size\", size);\n          });\n        }\n      }\n    }\n  }, [quillRef, toolbarRef]);\n};\n_s(useQuill, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\nexport default useQuill;","map":{"version":3,"names":["useEffect","Quill","useQuill","quillRef","toolbarRef","_s","current","__quill","quill","theme","modules","toolbar","container","handlers","image","input","document","createElement","setAttribute","click","onchange","file","files","reader","FileReader","onload","range","getSelection","insertEmbed","index","result","readAsDataURL","formats","on","oldRange","source","format","getFormat","sizeSelect","querySelector","value","size","addEventListener","e","target"],"sources":["C:/Users/gkscj/Desktop/web 프로젝트/B_C/b_c/src/Component/Blog/Function/useQuill.js"],"sourcesContent":["// import { useEffect } from \"react\";\r\n// import Quill from \"quill\";\r\n\r\n// const useQuill = (quillRef, toolbarRef) => {\r\n//   useEffect(() => {\r\n//     if (quillRef.current && toolbarRef.current) {\r\n//       if (!quillRef.current.__quill) {\r\n//         const quill = new Quill(quillRef.current, {\r\n//           theme: \"snow\",\r\n//           modules: {\r\n//             toolbar: {\r\n//               container: toolbarRef.current,\r\n//             },\r\n//           },\r\n//           formats: [\r\n//             \"header\",\r\n//             \"font\",\r\n//             \"size\",\r\n//             \"bold\",\r\n//             \"italic\",\r\n//             \"underline\",\r\n//             \"strike\",\r\n//             \"color\",\r\n//             \"background\",\r\n//             \"script\",\r\n//             \"list\",\r\n//             \"bullet\",\r\n//             \"indent\",\r\n//             \"align\",\r\n//             \"direction\",\r\n//             \"link\",\r\n//             \"image\",\r\n//             \"video\",\r\n//           ],\r\n//         });\r\n\r\n//         quillRef.current.__quill = true;\r\n\r\n//         // 선택 변경 이벤트 리스너 추가\r\n//         quill.on(\"selection-change\", (range, oldRange, source) => {\r\n//           if (range) {\r\n//             const format = quill.getFormat(range);\r\n//             const sizeSelect = toolbarRef.current.querySelector(\".ql-size\");\r\n//             if (sizeSelect) {\r\n//               sizeSelect.value = format.size || \"\";\r\n//             }\r\n//           }\r\n//         });\r\n\r\n//         // 툴바 글씨 크기 선택 이벤트 리스너 추가\r\n//         const sizeSelect = toolbarRef.current.querySelector(\".ql-size\");\r\n//         if (sizeSelect) {\r\n//           sizeSelect.addEventListener(\"change\", (e) => {\r\n//             const size = e.target.value;\r\n//             quill.format(\"size\", size);\r\n//           });\r\n//         }\r\n//       }\r\n//     }\r\n//   }, [quillRef, toolbarRef]);\r\n// };\r\n\r\n// export default useQuill;\r\n\r\n// import { useEffect } from \"react\";\r\n// import Quill from \"quill\";\r\n// import ImageResize from \"quill-image-resize-module\";\r\n\r\n// Quill.register(\"modules/imageResize\", ImageResize);\r\n\r\n// const useQuill = (quillRef, toolbarRef) => {\r\n//   useEffect(() => {\r\n//     if (quillRef.current && toolbarRef.current) {\r\n//       if (!quillRef.current.__quill) {\r\n//         const quill = new Quill(quillRef.current, {\r\n//           theme: \"snow\",\r\n//           modules: {\r\n//             toolbar: {\r\n//               container: toolbarRef.current,\r\n//             },\r\n//             imageResize: {\r\n//               // Options for image resize\r\n//               displaySize: true, // Show size controls\r\n//             },\r\n//           },\r\n//           formats: [\r\n//             \"header\",\r\n//             \"font\",\r\n//             \"size\",\r\n//             \"bold\",\r\n//             \"italic\",\r\n//             \"underline\",\r\n//             \"strike\",\r\n//             \"color\",\r\n//             \"background\",\r\n//             \"script\",\r\n//             \"list\",\r\n//             \"bullet\",\r\n//             \"indent\",\r\n//             \"align\",\r\n//             \"direction\",\r\n//             \"link\",\r\n//             \"image\",\r\n//             \"video\",\r\n//           ],\r\n//         });\r\n\r\n//         quillRef.current.__quill = true;\r\n\r\n//         // 선택 변경 이벤트 리스너 추가\r\n//         quill.on(\"selection-change\", (range, oldRange, source) => {\r\n//           if (range) {\r\n//             const format = quill.getFormat(range);\r\n//             const sizeSelect = toolbarRef.current.querySelector(\".ql-size\");\r\n//             if (sizeSelect) {\r\n//               sizeSelect.value = format.size || \"\";\r\n//             }\r\n//           }\r\n//         });\r\n\r\n//         // 툴바 글씨 크기 선택 이벤트 리스너 추가\r\n//         const sizeSelect = toolbarRef.current.querySelector(\".ql-size\");\r\n//         if (sizeSelect) {\r\n//           sizeSelect.addEventListener(\"change\", (e) => {\r\n//             const size = e.target.value;\r\n//             quill.format(\"size\", size);\r\n//           });\r\n//         }\r\n//       }\r\n//     }\r\n//   }, [quillRef, toolbarRef]);\r\n// };\r\n\r\n// export default useQuill;\r\n\r\n// import { useEffect } from \"react\";\r\n// import Quill from \"quill\";\r\n// import ImageResize from \"quill-image-resize-module\"; // 모듈 임포트\r\n\r\n// // Quill에 모듈 등록\r\n// Quill.register(\"modules/imageResize\", ImageResize);\r\n\r\n// const useQuill = (quillRef, toolbarRef) => {\r\n//   useEffect(() => {\r\n//     if (quillRef.current && toolbarRef.current) {\r\n//       if (!quillRef.current.__quill) {\r\n//         const quill = new Quill(quillRef.current, {\r\n//           theme: \"snow\",\r\n//           modules: {\r\n//             toolbar: {\r\n//               container: toolbarRef.current,\r\n//             },\r\n//             imageResize: {\r\n//               displaySize: true, // 이미지 크기 조절 UI 표시\r\n//             },\r\n//           },\r\n//           formats: [\r\n//             \"header\",\r\n//             \"font\",\r\n//             \"size\",\r\n//             \"bold\",\r\n//             \"italic\",\r\n//             \"underline\",\r\n//             \"strike\",\r\n//             \"color\",\r\n//             \"background\",\r\n//             \"script\",\r\n//             \"list\",\r\n//             \"bullet\",\r\n//             \"indent\",\r\n//             \"align\",\r\n//             \"direction\",\r\n//             \"link\",\r\n//             \"image\",\r\n//             \"video\",\r\n//           ],\r\n//         });\r\n\r\n//         quillRef.current.__quill = true;\r\n\r\n//         // 선택 변경 이벤트 리스너 추가\r\n//         quill.on(\"selection-change\", (range, oldRange, source) => {\r\n//           if (range) {\r\n//             const format = quill.getFormat(range);\r\n//             const sizeSelect = toolbarRef.current.querySelector(\".ql-size\");\r\n//             if (sizeSelect) {\r\n//               sizeSelect.value = format.size || \"\";\r\n//             }\r\n//           }\r\n//         });\r\n\r\n//         // 툴바 글씨 크기 선택 이벤트 리스너 추가\r\n//         const sizeSelect = toolbarRef.current.querySelector(\".ql-size\");\r\n//         if (sizeSelect) {\r\n//           sizeSelect.addEventListener(\"change\", (e) => {\r\n//             const size = e.target.value;\r\n//             quill.format(\"size\", size);\r\n//           });\r\n//         }\r\n//       }\r\n//     }\r\n//   }, [quillRef, toolbarRef]);\r\n// };\r\n\r\n// export default useQuill;\r\n\r\nimport { useEffect } from \"react\";\r\nimport Quill from \"quill\";\r\n//import Image from \"quill-image\"; // quill-image 패키지의 모듈 임포트\r\n\r\n// Quill에 이미지 모듈 등록\r\n//Quill.register(\"modules/image\", Image);\r\n\r\nconst useQuill = (quillRef, toolbarRef) => {\r\n  useEffect(() => {\r\n    if (quillRef.current && toolbarRef.current) {\r\n      if (!quillRef.current.__quill) {\r\n        const quill = new Quill(quillRef.current, {\r\n          theme: \"snow\",\r\n          modules: {\r\n            toolbar: {\r\n              container: toolbarRef.current,\r\n              handlers: {\r\n                image: () => {\r\n                  // 이미지 업로드 핸들러를 구현\r\n                  const input = document.createElement(\"input\");\r\n                  input.setAttribute(\"type\", \"file\");\r\n                  input.setAttribute(\"accept\", \"image/*\");\r\n                  input.click();\r\n                  input.onchange = () => {\r\n                    const file = input.files[0];\r\n                    if (file) {\r\n                      const reader = new FileReader();\r\n                      reader.onload = () => {\r\n                        const range = quill.getSelection();\r\n                        quill.insertEmbed(range.index, \"image\", reader.result);\r\n                      };\r\n                      reader.readAsDataURL(file);\r\n                    }\r\n                  };\r\n                },\r\n              },\r\n            },\r\n            image: {\r\n              // 이미지 모듈의 옵션을 설정할 수 있습니다.\r\n            },\r\n          },\r\n          formats: [\r\n            \"header\",\r\n            \"font\",\r\n            \"size\",\r\n            \"bold\",\r\n            \"italic\",\r\n            \"underline\",\r\n            \"strike\",\r\n            \"color\",\r\n            \"background\",\r\n            \"script\",\r\n            \"list\",\r\n            \"bullet\",\r\n            \"indent\",\r\n            \"align\",\r\n            \"direction\",\r\n            \"link\",\r\n            \"image\",\r\n            \"video\",\r\n          ],\r\n        });\r\n\r\n        quillRef.current.__quill = true;\r\n\r\n        // 선택 변경 이벤트 리스너 추가\r\n        quill.on(\"selection-change\", (range, oldRange, source) => {\r\n          if (range) {\r\n            const format = quill.getFormat(range);\r\n            const sizeSelect = toolbarRef.current.querySelector(\".ql-size\");\r\n            if (sizeSelect) {\r\n              sizeSelect.value = format.size || \"\";\r\n            }\r\n          }\r\n        });\r\n\r\n        // 툴바 글씨 크기 선택 이벤트 리스너 추가\r\n        const sizeSelect = toolbarRef.current.querySelector(\".ql-size\");\r\n        if (sizeSelect) {\r\n          sizeSelect.addEventListener(\"change\", (e) => {\r\n            const size = e.target.value;\r\n            quill.format(\"size\", size);\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }, [quillRef, toolbarRef]);\r\n};\r\n\r\nexport default useQuill;\r\n"],"mappings":";AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,SAASA,SAAS,QAAQ,OAAO;AACjC,OAAOC,KAAK,MAAM,OAAO;AACzB;;AAEA;AACA;;AAEA,MAAMC,QAAQ,GAAGA,CAACC,QAAQ,EAAEC,UAAU,KAAK;EAAAC,EAAA;EACzCL,SAAS,CAAC,MAAM;IACd,IAAIG,QAAQ,CAACG,OAAO,IAAIF,UAAU,CAACE,OAAO,EAAE;MAC1C,IAAI,CAACH,QAAQ,CAACG,OAAO,CAACC,OAAO,EAAE;QAC7B,MAAMC,KAAK,GAAG,IAAIP,KAAK,CAACE,QAAQ,CAACG,OAAO,EAAE;UACxCG,KAAK,EAAE,MAAM;UACbC,OAAO,EAAE;YACPC,OAAO,EAAE;cACPC,SAAS,EAAER,UAAU,CAACE,OAAO;cAC7BO,QAAQ,EAAE;gBACRC,KAAK,EAAEA,CAAA,KAAM;kBACX;kBACA,MAAMC,KAAK,GAAGC,QAAQ,CAACC,aAAa,CAAC,OAAO,CAAC;kBAC7CF,KAAK,CAACG,YAAY,CAAC,MAAM,EAAE,MAAM,CAAC;kBAClCH,KAAK,CAACG,YAAY,CAAC,QAAQ,EAAE,SAAS,CAAC;kBACvCH,KAAK,CAACI,KAAK,CAAC,CAAC;kBACbJ,KAAK,CAACK,QAAQ,GAAG,MAAM;oBACrB,MAAMC,IAAI,GAAGN,KAAK,CAACO,KAAK,CAAC,CAAC,CAAC;oBAC3B,IAAID,IAAI,EAAE;sBACR,MAAME,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;sBAC/BD,MAAM,CAACE,MAAM,GAAG,MAAM;wBACpB,MAAMC,KAAK,GAAGlB,KAAK,CAACmB,YAAY,CAAC,CAAC;wBAClCnB,KAAK,CAACoB,WAAW,CAACF,KAAK,CAACG,KAAK,EAAE,OAAO,EAAEN,MAAM,CAACO,MAAM,CAAC;sBACxD,CAAC;sBACDP,MAAM,CAACQ,aAAa,CAACV,IAAI,CAAC;oBAC5B;kBACF,CAAC;gBACH;cACF;YACF,CAAC;YACDP,KAAK,EAAE;cACL;YAAA;UAEJ,CAAC;UACDkB,OAAO,EAAE,CACP,QAAQ,EACR,MAAM,EACN,MAAM,EACN,MAAM,EACN,QAAQ,EACR,WAAW,EACX,QAAQ,EACR,OAAO,EACP,YAAY,EACZ,QAAQ,EACR,MAAM,EACN,QAAQ,EACR,QAAQ,EACR,OAAO,EACP,WAAW,EACX,MAAM,EACN,OAAO,EACP,OAAO;QAEX,CAAC,CAAC;QAEF7B,QAAQ,CAACG,OAAO,CAACC,OAAO,GAAG,IAAI;;QAE/B;QACAC,KAAK,CAACyB,EAAE,CAAC,kBAAkB,EAAE,CAACP,KAAK,EAAEQ,QAAQ,EAAEC,MAAM,KAAK;UACxD,IAAIT,KAAK,EAAE;YACT,MAAMU,MAAM,GAAG5B,KAAK,CAAC6B,SAAS,CAACX,KAAK,CAAC;YACrC,MAAMY,UAAU,GAAGlC,UAAU,CAACE,OAAO,CAACiC,aAAa,CAAC,UAAU,CAAC;YAC/D,IAAID,UAAU,EAAE;cACdA,UAAU,CAACE,KAAK,GAAGJ,MAAM,CAACK,IAAI,IAAI,EAAE;YACtC;UACF;QACF,CAAC,CAAC;;QAEF;QACA,MAAMH,UAAU,GAAGlC,UAAU,CAACE,OAAO,CAACiC,aAAa,CAAC,UAAU,CAAC;QAC/D,IAAID,UAAU,EAAE;UACdA,UAAU,CAACI,gBAAgB,CAAC,QAAQ,EAAGC,CAAC,IAAK;YAC3C,MAAMF,IAAI,GAAGE,CAAC,CAACC,MAAM,CAACJ,KAAK;YAC3BhC,KAAK,CAAC4B,MAAM,CAAC,MAAM,EAAEK,IAAI,CAAC;UAC5B,CAAC,CAAC;QACJ;MACF;IACF;EACF,CAAC,EAAE,CAACtC,QAAQ,EAAEC,UAAU,CAAC,CAAC;AAC5B,CAAC;AAACC,EAAA,CAhFIH,QAAQ;AAkFd,eAAeA,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}