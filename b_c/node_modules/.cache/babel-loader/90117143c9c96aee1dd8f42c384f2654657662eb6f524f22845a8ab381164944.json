{"ast":null,"code":"// import { io } from \"socket.io-client\";\n// const socket = io(\"http://localhost:3001\");\n\n// const UserData = require(\"./UserData.js\");\n\n// export function UserData_Save(formData) {\n//   var save = UserData.Rec_User_Data(socket, formData);\n//   console.log(save);\n//   return new Promise((resolve, reject) => {\n//     resolve(save);\n//   });\n// }\n\nconst io = require(\"socket.io-client\");\nconst socket = io(\"http://localhost:3001\");\nconst UserData = require(\"./UserData.js\");\n\n/**\r\n * Saves user data by sending it through a socket connection.\r\n * @param {Object} formData - The data to be saved.\r\n * @returns {Promise} - A promise that resolves with the response from Rec_User_Data.\r\n */\nfunction UserData_Save(formData) {\n  return new Promise((resolve, reject) => {\n    UserData.Rec_User_Data(socket, formData).then(save => {\n      console.log(save);\n      resolve(save);\n    }).catch(error => {\n      console.error(\"Error saving user data:\", error);\n      reject(error);\n    });\n  });\n}\n_c = UserData_Save;\nmodule.exports = {\n  UserData_Save\n};\nvar _c;\n$RefreshReg$(_c, \"UserData_Save\");","map":{"version":3,"names":["io","require","socket","UserData","UserData_Save","formData","Promise","resolve","reject","Rec_User_Data","then","save","console","log","catch","error","_c","module","exports","$RefreshReg$"],"sources":["C:/Users/gkscj/Desktop/web 프로젝트/B_C/b_c/src/Component/test_module (이후 삭제 예정)/sockets.js"],"sourcesContent":["// import { io } from \"socket.io-client\";\r\n// const socket = io(\"http://localhost:3001\");\r\n\r\n// const UserData = require(\"./UserData.js\");\r\n\r\n// export function UserData_Save(formData) {\r\n//   var save = UserData.Rec_User_Data(socket, formData);\r\n//   console.log(save);\r\n//   return new Promise((resolve, reject) => {\r\n//     resolve(save);\r\n//   });\r\n// }\r\n\r\nconst io = require(\"socket.io-client\");\r\nconst socket = io(\"http://localhost:3001\");\r\n\r\nconst UserData = require(\"./UserData.js\");\r\n\r\n/**\r\n * Saves user data by sending it through a socket connection.\r\n * @param {Object} formData - The data to be saved.\r\n * @returns {Promise} - A promise that resolves with the response from Rec_User_Data.\r\n */\r\nfunction UserData_Save(formData) {\r\n  return new Promise((resolve, reject) => {\r\n    UserData.Rec_User_Data(socket, formData)\r\n      .then((save) => {\r\n        console.log(save);\r\n        resolve(save);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error saving user data:\", error);\r\n        reject(error);\r\n      });\r\n  });\r\n}\r\n\r\nmodule.exports = {\r\n  UserData_Save,\r\n};\r\n"],"mappings":"AAAA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMA,EAAE,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AACtC,MAAMC,MAAM,GAAGF,EAAE,CAAC,uBAAuB,CAAC;AAE1C,MAAMG,QAAQ,GAAGF,OAAO,CAAC,eAAe,CAAC;;AAEzC;AACA;AACA;AACA;AACA;AACA,SAASG,aAAaA,CAACC,QAAQ,EAAE;EAC/B,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACtCL,QAAQ,CAACM,aAAa,CAACP,MAAM,EAAEG,QAAQ,CAAC,CACrCK,IAAI,CAAEC,IAAI,IAAK;MACdC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MACjBJ,OAAO,CAACI,IAAI,CAAC;IACf,CAAC,CAAC,CACDG,KAAK,CAAEC,KAAK,IAAK;MAChBH,OAAO,CAACG,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/CP,MAAM,CAACO,KAAK,CAAC;IACf,CAAC,CAAC;EACN,CAAC,CAAC;AACJ;AAACC,EAAA,GAZQZ,aAAa;AActBa,MAAM,CAACC,OAAO,GAAG;EACfd;AACF,CAAC;AAAC,IAAAY,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}