{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gkscj\\\\Desktop\\\\web \\uD504\\uB85C\\uC81D\\uD2B8\\\\B_C\\\\b_c\\\\src\\\\Component\\\\SelectID.js\",\n  _s = $RefreshSig$();\nimport Menubar from \"./Menubar\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport \"../Style/SelectID.css\";\nimport useStringID from \"../Function/SelectID/useStringID\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SelectID() {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const state = location.state || {}; // 전달된 상태 객체\n  const {\n    String_ID\n  } = state; // 상태 객체에서 String_ID 추출\n\n  const {\n    options,\n    selectedOption,\n    setSelectedOption\n  } = useStringID(String_ID); //아이디 받아와서 배열에 넣기\n\n  const handleOptionChange = event => {\n    setSelectedOption(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Menubar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App-content-SelectID\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uC544\\uC774\\uB514 \\uCC3E\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), options.length > 0 ? /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form_selectID\",\n        children: options.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            id: `option${index}`,\n            name: \"selection\",\n            value: option,\n            checked: selectedOption === option,\n            onChange: handleOptionChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: `option${index}`,\n            children: option\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uC544\\uC774\\uB514\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"Select-button-Select\",\n        onClick: () => navigate(\"/Login\", {\n          state: {\n            ID: selectedOption\n          }\n        }),\n        children: \"\\uB85C\\uADF8\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"Select-button-Select\",\n        onClick: () => navigate(\"/ChangePW\", {\n          state: {\n            ID: selectedOption\n          }\n        }),\n        children: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uCC3E\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_s(SelectID, \"GA2nJmnOTfodlE9scIhb3pAoHMw=\", false, function () {\n  return [useNavigate, useLocation, useStringID];\n});\n_c = SelectID;\nexport default SelectID;\nvar _c;\n$RefreshReg$(_c, \"SelectID\");","map":{"version":3,"names":["Menubar","useLocation","useNavigate","useStringID","jsxDEV","_jsxDEV","SelectID","_s","navigate","location","state","String_ID","options","selectedOption","setSelectedOption","handleOptionChange","event","target","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","option","index","type","id","name","checked","onChange","htmlFor","onClick","ID","_c","$RefreshReg$"],"sources":["C:/Users/gkscj/Desktop/web 프로젝트/B_C/b_c/src/Component/SelectID.js"],"sourcesContent":["import Menubar from \"./Menubar\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport \"../Style/SelectID.css\";\r\nimport useStringID from \"../Function/SelectID/useStringID\";\r\n\r\nfunction SelectID() {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  const state = location.state || {}; // 전달된 상태 객체\r\n  const { String_ID } = state; // 상태 객체에서 String_ID 추출\r\n\r\n  const { options, selectedOption, setSelectedOption } = useStringID(String_ID); //아이디 받아와서 배열에 넣기\r\n\r\n  const handleOptionChange = (event) => {\r\n    setSelectedOption(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Menubar />\r\n      <div className=\"App-content-SelectID\">\r\n        <h2>아이디 찾기</h2>\r\n        {options.length > 0 ? (\r\n          <form className=\"form_selectID\">\r\n            {options.map((option, index) => (\r\n              <div key={index}>\r\n                <input\r\n                  type=\"radio\"\r\n                  id={`option${index}`}\r\n                  name=\"selection\"\r\n                  value={option}\r\n                  checked={selectedOption === option}\r\n                  onChange={handleOptionChange}\r\n                />\r\n                <label htmlFor={`option${index}`}>{option}</label>\r\n              </div>\r\n            ))}\r\n          </form>\r\n        ) : (\r\n          <p>아이디가 없습니다.</p>\r\n        )}\r\n        <button\r\n          className=\"Select-button-Select\"\r\n          onClick={() => navigate(\"/Login\", { state: { ID: selectedOption } })}\r\n        >\r\n          로그인\r\n        </button>\r\n        <button\r\n          className=\"Select-button-Select\"\r\n          onClick={() =>\r\n            navigate(\"/ChangePW\", { state: { ID: selectedOption } })\r\n          }\r\n        >\r\n          비밀번호 찾기\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SelectID;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}