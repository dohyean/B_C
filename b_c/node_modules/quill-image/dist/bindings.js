'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.QuillImageBindings = undefined;

var _utils = require('./utils');

var QuillImageBindings = exports.QuillImageBindings = {
	'quill-image:backspace': {
		key: 'backspace',
		handler: function handler(range, keycontext) {
			var blot = this.quill.getLeaf(range.index)[0];
			var node = blot.domNode;
			if ((0, _utils.isQuillImageBlot)(node)) {
				return true;
			}
			var prevQuillImageBlock = (0, _utils.getPrevQuillImageBlot)(blot);
			if (prevQuillImageBlock && !blot.value()) {
				this.quill.deleteText(range.index, 1, this.quill.constructor.sources.USER);
				this.quill.setSelection(this.quill.getIndex(prevQuillImageBlock), 0);
				prevQuillImageBlock.domNode.focus();
				return false;
			}
			return true;
		}
	},
	'quill-image:up': {
		key: 'up',
		handler: function handler(range, keycontext) {
			var blot = this.quill.getLeaf(range.index)[0];
			var prevQuillImageBlock = (0, _utils.getPrevQuillImageBlot)(blot);
			if (prevQuillImageBlock) {
				this.quill.setSelection(this.quill.getIndex(prevQuillImageBlock), 0);
				prevQuillImageBlock.domNode.focus();
				return false;
			}
			return true;
		}
	},
	'quill-image:down': {
		key: 'down',
		handler: function handler(range, keycontext) {
			var blot = this.quill.getLeaf(range.index)[0];
			var nextQuillImageBlock = (0, _utils.getNextQuillImageBlot)(blot);
			if (nextQuillImageBlock) {
				this.quill.setSelection(this.quill.getIndex(nextQuillImageBlock), 0);
				nextQuillImageBlock.domNode.focus();
				return false;
			}
			return true;
		}
	}
};